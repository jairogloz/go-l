// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jairogloz/go-l/pkg/ports (interfaces: PlayerService)
//
// Generated by this command:
//
//	mockgen -destination=mocks/mock_player_service.go -package=mocks github.com/jairogloz/go-l/pkg/ports PlayerService
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	domain "github.com/jairogloz/go-l/pkg/domain"
	gomock "go.uber.org/mock/gomock"
)

// MockPlayerService is a mock of PlayerService interface.
type MockPlayerService struct {
	ctrl     *gomock.Controller
	recorder *MockPlayerServiceMockRecorder
}

// MockPlayerServiceMockRecorder is the mock recorder for MockPlayerService.
type MockPlayerServiceMockRecorder struct {
	mock *MockPlayerService
}

// NewMockPlayerService creates a new mock instance.
func NewMockPlayerService(ctrl *gomock.Controller) *MockPlayerService {
	mock := &MockPlayerService{ctrl: ctrl}
	mock.recorder = &MockPlayerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPlayerService) EXPECT() *MockPlayerServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockPlayerService) Create(arg0 *domain.Player) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockPlayerServiceMockRecorder) Create(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockPlayerService)(nil).Create), arg0)
}

// Delete mocks base method.
func (m *MockPlayerService) Delete(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockPlayerServiceMockRecorder) Delete(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockPlayerService)(nil).Delete), arg0)
}

// Get mocks base method.
func (m *MockPlayerService) Get(arg0 string) (*domain.Player, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*domain.Player)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockPlayerServiceMockRecorder) Get(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockPlayerService)(nil).Get), arg0)
}

// GetAll mocks base method.
func (m *MockPlayerService) GetAll() ([]*domain.Player, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]*domain.Player)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockPlayerServiceMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockPlayerService)(nil).GetAll))
}
